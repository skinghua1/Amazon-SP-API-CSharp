/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Runtime.Serialization;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInbound
{
    /// <summary>
    /// The condition of the item.
    /// </summary>
    /// <value>The condition of the item.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Condition
    {

        /// <summary>
        /// Enum NewItem for value: NewItem
        /// </summary>
        [EnumMember(Value = "NewItem")]
        NewItem,

        /// <summary>
        /// Enum NewWithWarranty for value: NewWithWarranty
        /// </summary>
        [EnumMember(Value = "NewWithWarranty")]
        NewWithWarranty,

        /// <summary>
        /// Enum NewOEM for value: NewOEM
        /// </summary>
        [EnumMember(Value = "NewOEM")]
        NewOEM,

        /// <summary>
        /// Enum NewOpenBox for value: NewOpenBox
        /// </summary>
        [EnumMember(Value = "NewOpenBox")]
        NewOpenBox,

        /// <summary>
        /// Enum UsedLikeNew for value: UsedLikeNew
        /// </summary>
        [EnumMember(Value = "UsedLikeNew")]
        UsedLikeNew,

        /// <summary>
        /// Enum UsedVeryGood for value: UsedVeryGood
        /// </summary>
        [EnumMember(Value = "UsedVeryGood")]
        UsedVeryGood,

        /// <summary>
        /// Enum UsedGood for value: UsedGood
        /// </summary>
        [EnumMember(Value = "UsedGood")]
        UsedGood,

        /// <summary>
        /// Enum UsedAcceptable for value: UsedAcceptable
        /// </summary>
        [EnumMember(Value = "UsedAcceptable")]
        UsedAcceptable,

        /// <summary>
        /// Enum UsedPoor for value: UsedPoor
        /// </summary>
        [EnumMember(Value = "UsedPoor")]
        UsedPoor,

        /// <summary>
        /// Enum UsedRefurbished for value: UsedRefurbished
        /// </summary>
        [EnumMember(Value = "UsedRefurbished")]
        UsedRefurbished,

        /// <summary>
        /// Enum CollectibleLikeNew for value: CollectibleLikeNew
        /// </summary>
        [EnumMember(Value = "CollectibleLikeNew")]
        CollectibleLikeNew,

        /// <summary>
        /// Enum CollectibleVeryGood for value: CollectibleVeryGood
        /// </summary>
        [EnumMember(Value = "CollectibleVeryGood")]
        CollectibleVeryGood,

        /// <summary>
        /// Enum CollectibleGood for value: CollectibleGood
        /// </summary>
        [EnumMember(Value = "CollectibleGood")]
        CollectibleGood,

        /// <summary>
        /// Enum CollectibleAcceptable for value: CollectibleAcceptable
        /// </summary>
        [EnumMember(Value = "CollectibleAcceptable")]
        CollectibleAcceptable,

        /// <summary>
        /// Enum CollectiblePoor for value: CollectiblePoor
        /// </summary>
        [EnumMember(Value = "CollectiblePoor")]
        CollectiblePoor,

        /// <summary>
        /// Enum RefurbishedWithWarranty for value: RefurbishedWithWarranty
        /// </summary>
        [EnumMember(Value = "RefurbishedWithWarranty")]
        RefurbishedWithWarranty,

        /// <summary>
        /// Enum Refurbished for value: Refurbished
        /// </summary>
        [EnumMember(Value = "Refurbished")]
        Refurbished,

        /// <summary>
        /// Enum Club for value: Club
        /// </summary>
        [EnumMember(Value = "Club")]
        Club
    }

}
